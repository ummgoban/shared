name: Auto Changelog

on:
  pull_request:
    types: [closed]
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changelog:
    if: "github.event.pull_request.merged == true && !startsWith(github.event.pull_request.title, 'release: v') && !startsWith(github.event.pull_request.title, 'chore(deps):')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js 20.x for corepack
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@ummgoban'

      - name: Enable Corepack and Set yarn Version
        run: |
          npm install -g corepack@latest
          corepack enable

      - name: Setup Node.js 20.x for yarn
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: yarn

      - name: Install dependencies
        run: yarn install

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Generate changelog and bump version
        run: |
          yarn release

      - name: Get new version
        id: get-version
        run: echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'release: v${{ steps.get-version.outputs.VERSION }}'
          title: 'release: v${{ steps.get-version.outputs.VERSION }}'
          body: |
            ## 변경 사항
            - package.json 버전 업데이트 (${{ steps.get-version.outputs.VERSION }})
            - CHANGELOG.md 갱신

            <details>
              <summary>
                <h2>명령어</h2>
                pull request에 댓글로 명령어를 입력할 수 있습니다.
              </summary>
              <ul>
                <li><code>/version:[command]</code>: 버전 업데이트</li>
                <li><code>/skip</code>: 버전 스킵</li>
                <li><code>/reopen</code>: pull request 재개</li>
              </ul>

              <h3>버전 업데이트 (<code>/version:[command]</code>)</h3>

              ```bash
              /version:[x].[y].[z]+(-[\w\.]+)?
              /version:[patch|minor|major|nightly|beta|alpha|rc]
              ```
              **예시**
              ```bash
              /version:1.0.0
              ```
              ```bash
              /version:1.0.0-alpha.1
              ```
              ```bash
              /version:1.0.0-nightly.250804.abcdef
              ```
              ```bash
              /version:patch
              ```
              ```bash
              /version:minor
              ```
              ```bash
              /version:major
              ```
              ```bash
              /version:nightly
              ```
              ```bash
              /version:beta
              ```
              ```bash
              /version:alpha
              ```
              ```bash
              /version:rc
              ```

              <h3>버전 스킵 (<code>/skip</code>)</h3>

              ```bash
              /skip
              ```

              <h3>pull request 재개 (<code>/reopen</code>)</h3>

              ```bash
              /reopen
              ```
            </details>
          branch: auto-changelog-update
          base: main
          delete-branch: true
